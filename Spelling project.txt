import java.io.*;
import java.util.*;
import java.util.regex.*;


class Spelling {

  private HashMap<String, Integer> nWords;

  
  public Spelling(String file) throws IOException {
    nWords = new HashMap<String, Integer>();
    BufferedReader in = new BufferedReader(new FileReader(file));
    
   
    Pattern p = Pattern.compile("\\w+");
    for(String temp = ""; temp != null; temp = in.readLine()){
      Matcher m = p.matcher(temp.toLowerCase());
      
      
      while(m.find())    
        nWords.put((temp = m.group()), nWords.containsKey(temp) ? nWords.get(temp) + 1 : 1);
    }
    in.close();
  }

  
  private ArrayList<String> edits(String word) {
    ArrayList<String> result = new ArrayList<String>();
    
    // All deletes of a single letter
    for(int i=0; i < word.length(); ++i)      result.add(word.substring(0, i) + word.substring(i+1));
    
    // All swaps of adjacent letters
    for(int i=0; i < word.length()-1; ++i) 
      result.add(word.substring(0, i) + word.substring(i+1, i+2) + 
                 word.substring(i, i+1) + word.substring(i+2));
    
    // All replacements of a letter
    for(int i=0; i < word.length(); ++i) 
      for(char c='a'; c <= 'z'; ++c) 
        result.add(word.substring(0, i) + String.valueOf(c) + word.substring(i+1));
    
    // All insertions of a letter
    for(int i=0; i <= word.length(); ++i) 
      for(char c='a'; c <= 'z'; ++c) 
        result.add(word.substring(0, i) + String.valueOf(c) + word.substring(i));
    
    return result;
  }

 
  public String correct(String word) {
  
    if(nWords.containsKey(word)) 
      return null;

    ArrayList<String> list = edits(word);  
    HashMap<Integer, String> candidates = new HashMap<Integer, String>();

   
    for(String s : list) 
      if(nWords.containsKey(s)) 
        candidates.put(nWords.get(s),s);

  
    if(candidates.size() > 0) 
    	candidates.get(Collections.max(candidates.keySet()));


    for(String s : list) 
      for(String w : edits(s)) 
        if(nWords.containsKey(w)) 
          candidates.put(nWords.get(w),w);
    
    
    return candidates.size() > 0 ? 
         " (MISSPELLED)" : "(MISMATCHED)";
  }
  


   public static void main(String args[]) throws IOException {
     Spelling corrector = new Spelling("Dictionary.txt");
     Scanner input = new Scanner(System.in);  
     
     System.out.println("Enter words to correct");
     String word = input.next();
     
     while(true) {
       System.out.println(word + " --> " + corrector.correct(word));
       word = input.next();
     }
   }
}